import matplotlib as mplib
import matplotlib.pyplot as plt
from matplotlib.ticker import LogLocator, FixedLocator, ScalarFormatter
import numpy as np
mplib.rcParams['ps.useafm'] = True
mplib.rcParams['pdf.use14corefonts'] = True
mplib.rcParams['text.usetex'] = True

xaxis=np.arange(0,101,1)
#ax0ticks = np.array([1, 10, 20, 40, 100, 200, 1000])
#TBAA and BasicAA without register renaming for w
bt1 = np.array([0.00,0.00,0.00,0.00,0.11,0.48,0.59,0.62,0.67,0.71,0.81,0.82,0.85,0.85,0.85,0.86,0.87,0.87,0.87,0.88,0.88,0.88,0.92,0.92,0.93,0.94,0.94,0.95,0.95,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
cg1 = np.array([0.00,0.00,0.00,0.01,0.05,0.19,0.20,0.24,0.26,0.29,0.31,0.37,0.57,0.58,0.64,0.66,0.66,0.68,0.69,0.69,0.69,0.71,0.71,0.73,0.73,0.73,0.79,0.81,0.82,0.83,0.84,0.84,0.84,0.84,0.84,0.84,0.84,0.85,0.85,0.85,0.85,0.85,0.85,0.85,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88])
ep1 = np.array([0.00,0.00,0.00,0.09,0.15,0.16,0.17,0.17,0.17,0.17,0.19,0.22,0.39,0.39,0.40,0.40,0.42,0.42,0.42,0.43,0.43,0.43,0.43,0.43,0.44,0.44,0.44,0.46,0.47,0.47,0.47,0.48,0.48,0.49,0.50,0.50,0.51,0.52,0.52,0.52,0.52,0.54,0.56,0.60,0.61,0.64,0.68,0.69,0.72,0.74,0.75,0.75,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.77,0.77,0.77,0.78,0.78,0.79,0.81,0.82,0.85,0.85,0.85,0.86,0.87,0.89,0.89,0.90,0.91,0.91,0.92,0.93,0.94,0.95,0.96,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
ft1 = np.array([0.00,0.00,0.00,0.02,0.03,0.03,0.03,0.03,0.04,0.04,0.05,0.09,0.22,0.29,0.30,0.30,0.31,0.36,0.36,0.37,0.38,0.38,0.40,0.42,0.42,0.42,0.43,0.43,0.44,0.45,0.46,0.46,0.47,0.48,0.49,0.49,0.50,0.61,0.61,0.61,0.61,0.61,0.61,0.70,0.71,0.89,0.90,0.91,0.92,0.93,0.93,0.93,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.95,0.95,0.95,0.96,0.96,0.96,0.96,0.96,0.96,0.97,0.97,0.97,0.97,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
IS1 = np.array([0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.02,0.39,0.48,0.52,0.52,0.52,0.52,0.52,0.52,0.55,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93])
lu1 = np.array([0.00,0.00,0.00,0.07,0.08,0.09,0.12,0.17,0.21,0.26,0.29,0.31,0.34,0.40,0.45,0.46,0.47,0.49,0.52,0.56,0.57,0.59,0.62,0.64,0.66,0.67,0.69,0.70,0.72,0.73,0.73,0.75,0.75,0.76,0.76,0.78,0.78,0.79,0.79,0.79,0.80,0.80,0.81,0.81,0.82,0.82,0.82,0.82,0.83,0.84,0.85,0.85,0.85,0.86,0.86,0.86,0.88,0.88,0.89,0.89,0.90,0.90,0.91,0.91,0.91,0.92,0.92,0.92,0.93,0.93,0.94,0.94,0.94,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.99,0.99,0.99,0.99])
mg1 = np.array([0.00,0.00,0.00,0.00,0.01,0.01,0.03,0.05,0.06,0.08,0.09,0.12,0.13,0.13,0.14,0.15,0.18,0.19,0.20,0.20,0.20,0.21,0.21,0.21,0.39,0.39,0.40,0.40,0.41,0.41,0.41,0.59,0.59,0.59,0.59,0.59,0.65,0.76,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.79,0.79,0.79,0.79,0.79,0.79,0.79,0.79,0.79,0.85,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
sp1 = np.array([0.00,0.00,0.00,0.01,0.21,0.29,0.36,0.40,0.49,0.51,0.53,0.55,0.62,0.63,0.63,0.65,0.66,0.68,0.68,0.68,0.69,0.70,0.70,0.70,0.70,0.70,0.71,0.72,0.73,0.74,0.74,0.75,0.75,0.76,0.77,0.77,0.78,0.78,0.78,0.78,0.79,0.79,0.80,0.82,0.83,0.84,0.86,0.87,0.88,0.88,0.89,0.89,0.89,0.89,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.91,0.91,0.92,0.92,0.93,0.93,0.93,0.93,0.94,0.94,0.94,0.94,0.95,0.95,0.95,0.95,0.96,0.96,0.96,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
#TBAA and BasicAA with register renaming for w
bt2 = np.array([0.00,0.00,0.00,0.00,0.11,0.48,0.59,0.62,0.67,0.71,0.81,0.82,0.85,0.85,0.85,0.86,0.87,0.87,0.87,0.88,0.88,0.88,0.92,0.92,0.93,0.94,0.94,0.95,0.95,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
cg2 = np.array([0.00,0.00,0.00,0.01,0.05,0.19,0.20,0.24,0.26,0.29,0.31,0.37,0.57,0.58,0.64,0.66,0.66,0.68,0.69,0.69,0.69,0.71,0.71,0.73,0.73,0.73,0.79,0.81,0.82,0.83,0.84,0.84,0.84,0.84,0.84,0.84,0.84,0.85,0.85,0.85,0.85,0.85,0.85,0.85,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88])
ep2 = np.array([0.00,0.00,0.00,0.09,0.15,0.16,0.17,0.17,0.17,0.17,0.19,0.22,0.39,0.39,0.40,0.40,0.42,0.42,0.42,0.43,0.43,0.43,0.43,0.43,0.44,0.44,0.44,0.46,0.47,0.47,0.47,0.48,0.48,0.49,0.50,0.50,0.51,0.52,0.52,0.52,0.52,0.54,0.56,0.60,0.61,0.64,0.68,0.69,0.72,0.74,0.75,0.75,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.77,0.77,0.77,0.78,0.78,0.79,0.81,0.82,0.85,0.85,0.85,0.86,0.87,0.89,0.89,0.90,0.91,0.91,0.92,0.93,0.94,0.95,0.96,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
ft2 = np.array([0.00,0.00,0.00,0.02,0.03,0.03,0.03,0.03,0.04,0.04,0.05,0.09,0.22,0.29,0.30,0.30,0.31,0.36,0.36,0.37,0.38,0.38,0.40,0.42,0.42,0.42,0.43,0.43,0.44,0.45,0.46,0.46,0.47,0.48,0.49,0.49,0.50,0.61,0.61,0.61,0.61,0.61,0.61,0.70,0.71,0.89,0.90,0.91,0.92,0.93,0.93,0.93,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.95,0.95,0.95,0.96,0.96,0.96,0.96,0.96,0.96,0.97,0.97,0.97,0.97,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
IS2 = np.array([0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.02,0.39,0.48,0.52,0.52,0.52,0.52,0.52,0.52,0.55,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93])
lu2 = np.array([0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.02,0.39,0.48,0.52,0.52,0.52,0.52,0.52,0.52,0.55,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93])
mg2 = np.array([0.00,0.00,0.00,0.00,0.01,0.01,0.03,0.05,0.06,0.08,0.09,0.12,0.13,0.13,0.14,0.15,0.18,0.19,0.20,0.20,0.20,0.21,0.21,0.21,0.39,0.39,0.40,0.40,0.41,0.41,0.41,0.59,0.59,0.59,0.59,0.59,0.65,0.76,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.79,0.79,0.79,0.79,0.79,0.79,0.79,0.79,0.79,0.85,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
sp2 = np.array([0.00,0.00,0.00,0.01,0.21,0.29,0.36,0.40,0.49,0.51,0.53,0.55,0.62,0.63,0.63,0.65,0.66,0.68,0.68,0.68,0.69,0.70,0.70,0.70,0.70,0.70,0.71,0.72,0.73,0.74,0.74,0.75,0.75,0.76,0.77,0.77,0.78,0.78,0.78,0.78,0.79,0.79,0.80,0.82,0.83,0.84,0.86,0.87,0.88,0.88,0.89,0.89,0.89,0.89,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.91,0.91,0.92,0.92,0.93,0.93,0.93,0.93,0.94,0.94,0.94,0.94,0.95,0.95,0.95,0.95,0.96,0.96,0.96,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
#TBAA and BasicAA without register renaming for a

bt5 = np.array([0.00,0.00,0.00,0.00,0.12,0.50,0.60,0.62,0.68,0.71,0.81,0.82,0.85,0.86,0.86,0.86,0.87,0.87,0.87,0.88,0.88,0.88,0.93,0.93,0.94,0.94,0.95,0.95,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
cg5 = np.array([0.00,0.00,0.03,0.05,0.13,0.28,0.30,0.34,0.43,0.53,0.56,0.63,0.66,0.72,0.75,0.76,0.79,0.81,0.81,0.82,0.82,0.83,0.84,0.86,0.86,0.86,0.86,0.86,0.86,0.87,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91])
ep5 = np.array([0.00,0.00,0.00,0.09,0.16,0.16,0.17,0.17,0.17,0.17,0.19,0.22,0.40,0.40,0.40,0.41,0.42,0.43,0.43,0.43,0.43,0.43,0.43,0.44,0.44,0.44,0.44,0.46,0.47,0.47,0.47,0.48,0.48,0.49,0.50,0.50,0.51,0.52,0.52,0.52,0.52,0.54,0.56,0.60,0.62,0.65,0.68,0.70,0.73,0.74,0.75,0.75,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.77,0.77,0.77,0.78,0.78,0.79,0.81,0.82,0.85,0.85,0.85,0.86,0.87,0.89,0.89,0.90,0.91,0.91,0.92,0.93,0.94,0.95,0.96,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
ft5 = np.array([0.00,0.00,0.00,0.02,0.03,0.04,0.04,0.04,0.08,0.12,0.12,0.20,0.28,0.28,0.29,0.29,0.31,0.33,0.35,0.36,0.36,0.38,0.38,0.38,0.38,0.38,0.39,0.51,0.51,0.52,0.52,0.52,0.62,0.73,0.73,0.84,0.84,0.84,0.84,0.84,0.84,0.84,0.84,0.86,0.88,0.88,0.90,0.91,0.91,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.93,0.93,0.93,0.94,0.94,0.94,0.95,0.95,0.95,0.96,0.96,0.96,0.96,0.96,0.97,0.97,0.97,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
IS5 = np.array([0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.44,0.48,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.55,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93])
lu5=  np.array([])
mg5 = np.array([0.00,0.00,0.00,0.05,0.05,0.05,0.09,0.13,0.14,0.14,0.16,0.17,0.19,0.19,0.19,0.23,0.23,0.26,0.31,0.43,0.43,0.43,0.54,0.54,0.60,0.60,0.60,0.60,0.60,0.60,0.60,0.60,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.81,0.81,0.81,0.81,0.81,0.86,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
sp5 = np.array([0.00,0.00,0.00,0.01,0.28,0.39,0.43,0.46,0.52,0.54,0.55,0.56,0.63,0.64,0.66,0.67,0.68,0.69,0.69,0.69,0.69,0.70,0.70,0.70,0.70,0.70,0.70,0.71,0.71,0.71,0.72,0.72,0.74,0.74,0.75,0.75,0.75,0.76,0.77,0.78,0.79,0.81,0.82,0.83,0.83,0.84,0.85,0.87,0.88,0.88,0.89,0.89,0.89,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.92,0.92,0.92,0.93,0.94,0.94,0.94,0.94,0.94,0.94,0.95,0.95,0.95,0.96,0.96,0.96,0.97,0.97,0.97,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
#TBAA and BasicAA with register renaming for a
bt6 = np.array([0.00,0.00,0.00,0.00,0.11,0.48,0.58,0.61,0.67,0.71,0.80,0.82,0.85,0.85,0.85,0.85,0.87,0.87,0.87,0.87,0.87,0.88,0.92,0.92,0.93,0.93,0.94,0.95,0.95,0.96,0.96,0.96,0.96,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
cg6 = np.array([0.00,0.00,0.00,0.01,0.05,0.21,0.22,0.26,0.29,0.34,0.35,0.44,0.60,0.61,0.65,0.67,0.68,0.70,0.71,0.71,0.72,0.74,0.74,0.77,0.77,0.77,0.81,0.83,0.84,0.85,0.86,0.86,0.86,0.86,0.86,0.87,0.87,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91,0.91])
ep6 = np.array([0.00,0.00,0.00,0.09,0.15,0.16,0.17,0.17,0.17,0.17,0.19,0.22,0.39,0.39,0.40,0.40,0.42,0.42,0.42,0.43,0.43,0.43,0.43,0.43,0.44,0.44,0.44,0.46,0.47,0.47,0.47,0.48,0.48,0.49,0.50,0.50,0.51,0.52,0.52,0.52,0.52,0.54,0.56,0.60,0.61,0.64,0.68,0.69,0.72,0.74,0.75,0.75,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.76,0.77,0.77,0.77,0.78,0.78,0.79,0.81,0.82,0.85,0.85,0.85,0.86,0.87,0.89,0.89,0.90,0.91,0.91,0.92,0.93,0.94,0.95,0.96,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
ft6 = np.array([0.00,0.00,0.00,0.02,0.03,0.03,0.03,0.03,0.04,0.04,0.05,0.09,0.21,0.25,0.26,0.26,0.27,0.28,0.28,0.30,0.30,0.30,0.32,0.34,0.34,0.34,0.35,0.35,0.37,0.37,0.39,0.39,0.40,0.40,0.41,0.41,0.41,0.53,0.53,0.53,0.53,0.54,0.54,0.66,0.67,0.87,0.89,0.89,0.91,0.91,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.92,0.93,0.93,0.93,0.94,0.94,0.94,0.95,0.95,0.95,0.96,0.96,0.96,0.96,0.96,0.97,0.97,0.97,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
IS6 = np.array([0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.02,0.39,0.48,0.52,0.52,0.52,0.52,0.52,0.52,0.55,0.55,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93])
lu6 = np.array([])
mg6 = np.array([0.00,0.00,0.00,0.05,0.05,0.05,0.07,0.09,0.09,0.11,0.12,0.14,0.15,0.15,0.17,0.17,0.18,0.22,0.23,0.25,0.25,0.25,0.25,0.25,0.41,0.41,0.42,0.42,0.42,0.42,0.43,0.43,0.43,0.43,0.59,0.59,0.59,0.59,0.60,0.65,0.65,0.76,0.76,0.76,0.78,0.78,0.78,0.78,0.81,0.81,0.81,0.81,0.81,0.81,0.81,0.81,0.81,0.86,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
sp6 = np.array([])
#svf without register renaming for a
bt7 = np.array([])
cg7 = np.array([0.00,0.00,0.00,0.02,0.08,0.22,0.23,0.25,0.35,0.40,0.43,0.52,0.55,0.60,0.62,0.64,0.71,0.71,0.71,0.71,0.72,0.74,0.78,0.79,0.81,0.81,0.83,0.83,0.83,0.85,0.85,0.85,0.85,0.85,0.85,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89])
ep7 = np.array([])
ft7 = np.array([0.00,0.00,0.00,0.01,0.02,0.08,0.08,0.09,0.21,0.21,0.21,0.35,0.43,0.43,0.48,0.50,0.50,0.51,0.51,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.53,0.53,0.54,0.55,0.55,0.55,0.56,0.56,0.56,0.56,0.57,0.57,0.57,0.57,0.57,0.58,0.59,0.60,0.62,0.63,0.65,0.66,0.67,0.67,0.79,0.80,0.80,0.80,0.80,0.80,0.80,0.80,0.80,0.91,0.91,0.91,0.91,0.91,0.91,0.92,0.92,0.92,0.93,0.93,0.93,0.94,0.94,0.94,0.95,0.95,0.95,0.96,0.96,0.96,0.96,0.97,0.97,0.97,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
IS7 = np.array([0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.06,0.44,0.48,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.55,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93])
lu7 = np.array([0.00,0.00,0.00,0.20,0.22,0.23,0.29,0.42,0.42,0.45,0.49,0.51,0.52,0.53,0.53,0.57,0.58,0.58,0.60,0.62,0.63,0.68,0.68,0.69,0.69,0.73,0.75,0.76,0.76,0.78,0.80,0.80,0.81,0.81,0.84,0.84,0.84,0.85,0.85,0.86,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.89,0.89,0.90,0.91,0.91,0.91,0.91,0.91,0.91,0.92,0.92,0.93,0.94,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.96,0.96,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97])
mg7 = np.array([0.00,0.00,0.00,0.03,0.03,0.03,0.08,0.11,0.12,0.12,0.14,0.15,0.16,0.16,0.18,0.21,0.22,0.25,0.30,0.42,0.42,0.42,0.53,0.54,0.59,0.59,0.59,0.60,0.60,0.60,0.60,0.60,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.77,0.80,0.80,0.80,0.81,0.81,0.86,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
sp7 = np.array([0.00,0.00,0.00,0.00,0.29,0.40,0.45,0.46,0.53,0.54,0.55,0.56,0.63,0.65,0.67,0.68,0.68,0.68,0.68,0.69,0.69,0.69,0.69,0.69,0.70,0.70,0.70,0.70,0.71,0.71,0.71,0.71,0.73,0.74,0.74,0.75,0.75,0.76,0.76,0.77,0.78,0.79,0.81,0.82,0.82,0.83,0.84,0.86,0.87,0.88,0.88,0.88,0.89,0.89,0.89,0.89,0.89,0.89,0.90,0.90,0.90,0.90,0.90,0.90,0.90,0.91,0.91,0.91,0.91,0.92,0.92,0.93,0.93,0.93,0.93,0.93,0.94,0.94,0.95,0.95,0.95,0.95,0.96,0.96,0.96,0.97,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
#svf with register renaming for a
bt8 = np.array([0.00,0.00,0.00,0.00,0.13,0.64,0.77,0.78,0.79,0.82,0.83,0.84,0.84,0.84,0.84,0.84,0.85,0.85,0.85,0.85,0.85,0.85,0.90,0.90,0.92,0.92,0.93,0.93,0.93,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98,0.98])
cg8 = np.array([0.00,0.00,0.00,0.02,0.04,0.15,0.16,0.18,0.18,0.21,0.22,0.45,0.54,0.55,0.55,0.56,0.56,0.58,0.60,0.60,0.65,0.65,0.71,0.72,0.74,0.74,0.74,0.74,0.76,0.77,0.78,0.80,0.82,0.82,0.82,0.84,0.84,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.88,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89])
ep8 = np.array([0.00,0.00,0.00,0.08,0.14,0.15,0.17,0.17,0.17,0.17,0.18,0.22,0.39,0.39,0.39,0.39,0.42,0.42,0.42,0.42,0.42,0.43,0.43,0.43,0.43,0.43,0.44,0.45,0.46,0.46,0.47,0.47,0.48,0.49,0.50,0.50,0.50,0.51,0.51,0.52,0.52,0.53,0.56,0.59,0.60,0.63,0.67,0.69,0.72,0.74,0.74,0.74,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.76,0.77,0.77,0.77,0.77,0.78,0.79,0.81,0.82,0.84,0.85,0.85,0.86,0.87,0.88,0.89,0.90,0.91,0.91,0.92,0.93,0.94,0.95,0.96,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
ft8 = np.array([0.00,0.00,0.00,0.01,0.02,0.02,0.02,0.02,0.04,0.07,0.10,0.10,0.18,0.18,0.18,0.19,0.23,0.35,0.35,0.36,0.37,0.52,0.52,0.52,0.52,0.52,0.52,0.53,0.53,0.54,0.54,0.54,0.54,0.55,0.56,0.56,0.56,0.56,0.57,0.57,0.57,0.57,0.57,0.59,0.59,0.59,0.62,0.63,0.65,0.65,0.66,0.66,0.67,0.67,0.67,0.67,0.68,0.68,0.68,0.68,0.68,0.68,0.68,0.68,0.68,0.81,0.81,0.81,0.82,0.82,0.82,0.83,0.83,0.83,0.95,0.95,0.95,0.96,0.96,0.96,0.96,0.97,0.97,0.97,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
IS8 = np.array([0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.06,0.06,0.09,0.46,0.48,0.52,0.52,0.52,0.52,0.52,0.52,0.55,0.55,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93,0.93])
lu8 = np.array([0.00,0.00,0.00,0.20,0.20,0.20,0.27,0.36,0.38,0.41,0.45,0.47,0.50,0.51,0.52,0.55,0.56,0.60,0.60,0.60,0.62,0.63,0.65,0.65,0.67,0.67,0.70,0.73,0.74,0.75,0.75,0.78,0.78,0.78,0.79,0.81,0.81,0.81,0.82,0.82,0.82,0.83,0.84,0.84,0.84,0.84,0.84,0.85,0.86,0.86,0.87,0.89,0.89,0.89,0.89,0.90,0.91,0.92,0.92,0.92,0.92,0.92,0.92,0.93,0.93,0.93,0.94,0.94,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.95,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.96,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97])
mg8 = np.array([0.00,0.00,0.00,0.03,0.03,0.03,0.06,0.07,0.08,0.10,0.10,0.12,0.13,0.13,0.14,0.14,0.17,0.20,0.21,0.23,0.23,0.23,0.23,0.23,0.40,0.40,0.40,0.41,0.41,0.41,0.41,0.41,0.41,0.41,0.58,0.58,0.58,0.58,0.59,0.64,0.64,0.76,0.76,0.76,0.76,0.76,0.78,0.78,0.80,0.80,0.80,0.80,0.80,0.80,0.80,0.80,0.80,0.86,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.97,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])
mg8 = np.array([0.00,0.00,0.00,0.00,0.27,0.36,0.43,0.44,0.50,0.53,0.54,0.55,0.62,0.64,0.64,0.65,0.66,0.66,0.67,0.67,0.68,0.68,0.68,0.69,0.69,0.69,0.70,0.71,0.72,0.72,0.73,0.73,0.75,0.75,0.75,0.75,0.76,0.77,0.77,0.78,0.78,0.78,0.79,0.80,0.81,0.82,0.83,0.85,0.86,0.87,0.87,0.87,0.88,0.88,0.88,0.88,0.88,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.89,0.90,0.90,0.90,0.90,0.91,0.91,0.93,0.93,0.93,0.93,0.94,0.94,0.94,0.95,0.95,0.95,0.95,0.95,0.95,0.96,0.96,0.98,0.98,0.98,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99,0.99])


def f(t,s,f):
    return (np.sqrt(s/(2*2*t)))*100*f
def f2(t,s,f):
    return (np.sqrt(s/(2*4*t)))*100*f
def thresDet(thres,s):
    return np.ceil((thres*s)/0.0005)
#def thresDet2(thres,s):
#    return np.ceil((thres*s)/0.0005)*4

fig, ((ax0, ax1, ax2, ax3, ax4, ax5)) = plt.subplots(nrows=1, ncols=6)
ind=np.array([0, 10, 30, 50, 70, 100])
indy=np.array([0, 20, 40, 60, 80, 100])

def plot_gragh(ax, x, y,title):
  line, = ax.plot(x, y)
  ax.set_xlabel('Region size (\#insts)', fontsize=18)
  ax.set_ylabel('Cum. distribution (\%)', fontsize=18)
  ax.set_title('%s'% title , horizontalalignment='center',
               verticalalignment='bottom',y=-.33,fontsize=20)
  ax.set_xticklabels(ind, fontsize=20)
  ax.set_yticklabels(indy, fontsize=20)
  ax.set_xscale('log')
  ax.grid(True)
  ax.grid(b=True,which='minor')

def plot_gragh_all(ax, x, y1, y2, y3, y4, y5, y6, y7, y8,title):
  ax.plot(x, y1,label="$bt$")
  ax.plot(x, y2,label="$cg$")
  ax.plot(x, y3,label="$ep$")
  ax.plot(x, y4,label="$ft$")
  ax.plot(x, y5,label="$IS$")
  ax.plot(x, y6,label="$lu$")
  ax.plot(x, y7,label="$mg$")
  ax.plot(x, y8,label="$sp$")
  ax.set_xlabel('Region size (title)', fontsize=18)
  ax.set_ylabel('Cum. distribution (\%)', fontsize=18)
  ax.set_xticklabels(ind, fontsize=20)
  ax.set_yticklabels(indy, fontsize=20)
  ax.set_xscale('log')
  #ax.set_xticks([10, 60,  120, 200, 300, 400, 500, 1000])
#  ax.set_xticks([10, 20, 30, 40, 50, 70, 100, 150, 200, 300, 400, 600, 1000])
#  ax.set_xticks(ticks)
  ax.set_title('%s'% title , horizontalalignment='center',
               verticalalignment='bottom',y=-.22,fontsize=20)
  ax.grid(True)
  ax.grid(b=True,which='minor')
   

#plt.plot(p, f(p), 'o-')
#def plot_gragh(ax,p, size, ticks, title):
#  f05, = ax.plot(p, f(p,size,0.5))
#  f08, = ax.plot(p, f(p,size,0.8))
#  f10, = ax.plot(p, f(p,size,1))
#  f12, = ax.plot(p, f(p,size,1.2))
#  f15, = ax.plot(p, f(p,size,1.5))
#  f20, = ax.plot(p, f(p,size,2))
#  f25, = ax.plot(p, f(p,size,2.5))
#  num01 = thresDet(0.01, size)
#  num02 = thresDet(0.02, size)
#  num05 = thresDet(0.05, size)
#  num10 = thresDet(0.1, size)
#  num20 = thresDet(0.2, size)
#  l1, = ax.plot(np.repeat(num01, 7), f(num01, size, freq), "k*")
#  l2, = ax.plot(np.repeat(num02, 7), f(num02, size, freq), "ks")
#  l5, = ax.plot(np.repeat(num05, 7), f(num05, size, freq), "k^")
#  l10, = ax.plot(np.repeat(num10, 7), f(num10, size, freq), "kx")
#  l20, = ax.plot(np.repeat(num20, 7), f(num20, size, freq), "ko")
#  ax.annotate("%d"% num01, xy=(num01, f(num01, size, 2.5)), xycoords='data',
#              xytext=(3, 3), textcoords='offset points', fontsize=20)
#  ax.annotate("%d"% num02, xy=(num02, f(num02, size, 2.5)), xycoords='data',
#              xytext=(3, 3), textcoords='offset points', fontsize=20)
#  ax.annotate("%d"% num05, xy=(num05, f(num05, size, 2.5)), xycoords='data',
#              xytext=(3, 3), textcoords='offset points', fontsize=20)
#  ax.annotate("%d"% num10, xy=(num10, f(num10, size, 2.5)), xycoords='data',
#              xytext=(3, 3), textcoords='offset points', fontsize=20)
#  ax.annotate("%d"% num20, xy=(num20, f(num20, size, 2.5)), xycoords='data',
#              xytext=(3, 3), textcoords='offset points', fontsize=20)
#  ax.legend( (f25, f20, f15, f12, f10, f08, f05, l1, l2, l5, l10, l20),
#              ("2.5$Ghz$/%s$mm^2$"% size,'2$Ghz$/%s$mm^2$'% size,'1.5$Ghz$/%s$mm^2$'% size,
#               '1.2$Ghz$/%s$mm^2$'% size,'1$Ghz$/%s$mm^2$'% size,
#               '0.8$Ghz$/%s$mm^2$'% size, r'0.5$Ghz$/%s$mm^2$'% size,
#               '1% Overhead', '2% Overhead', '5% Overhead', '10% Overhead', '20% overhead'),
#               loc='upper right', shadow=True, numpoints=1, prop={'size':12})
#  ax.set_ylabel('Detection latency (cycles)', fontsize=14)
#  ax.set_xlabel('# of detectors', fontsize=14)
#  ax.set_xscale('log')
#  #ax.set_xticks([10, 60,  120, 200, 300, 400, 500, 1000])
##  ax.set_xticks([10, 20, 30, 40, 50, 70, 100, 150, 200, 300, 400, 600, 1000])
#  ax.set_xticks(ticks)
#  ax.set_title('(%s)'% title , horizontalalignment='center',
#               verticalalignment='bottom',y=-0.17,fontsize=18)
#  ax.get_xaxis().set_major_formatter(ScalarFormatter())

#plot_gragh(ax0,arange(1,1001,1), 0.45, ax0ticks, 'a')

#plot_gragh(ax0, xaxis, adpcmdecode, "adpcmdecode")
#plot_gragh(ax1, xaxis, adpcmencode, "adpcmencode")
#plot_gragh(ax2, xaxis, epic, "epic")
#plot_gragh(ax3, xaxis, unepic, "unepic")
#plot_gragh(ax4, xaxis, jpegdecode, "jpegdecode")
#plot_gragh(ax5, xaxis, jpegencode, "jpegencode")
#plot_gragh(ax6, xaxis, mesa_texgen, "mesa_texgen")
#plot_gragh(ax7, xaxis, pegwitencrypt, "pegwitencrypt")
#plot_gragh(ax8, xaxis, g721decode, "g721decode")
#plot_gragh(ax9, xaxis, g721encode, "g721encode")
#plot_gragh(ax10, xaxis, gsmdecode, "gsmdecode")
#plot_gragh(ax11, xaxis, gsmencode, "gsmencode")
#plot_gragh(ax12, xaxis, mpeg2decode, "mpeg2decode")
#plot_gragh(ax13, xaxis, mpeg2encode, "mpeg2encode")
#plot_gragh(ax14, xaxis, sha, "sha")
#plot_gragh(ax15, xaxis, susanedges, "susanedges")
#plot_gragh(ax16, xaxis, susancorners, "susancorners")
#plot_gragh_all(ax17, xaxis, adpcmdecode, adpcmencode, epic,unepic,jpegdecode,jpegencode,mesa_texgen,pegwitencrypt, g721decode,g721encode,gsmdecode,gsmencode,mpeg2decode,mpeg2encode,sha,susanedges,susancorners, "all")

#plot_gragh_all(ax0, xaxis, adpcmdecode, adpcmencode, epic,unepic,jpegdecode,jpegencode,mesa_texgen,pegwitencrypt, g721decode,g721encode,gsmdecode,gsmencode,mpeg2decode,mpeg2encode,sha,susanedges,susancorners, "(a) all")
#plot_gragh(ax1, xaxis, unepic, "(b) unepic")
#plot_gragh(ax2, xaxis, adpcmdecode, "(c) adpcmdecode")
#plot_gragh_all(ax0, xaxis, cg, ft, mg,"(a) orgi")
#plot_gragh_all(ax0, xaxis, cg1, ft1, mg1,"(b) svf")
#plot_gragh_all(ax0, xaxis, cg2, ft2, mg2,"(c) turntile")
plot_gragh_all(ax0, xaxis, bt1, cg1, ep1, ft1, IS1, lu1, mg1, sp1,"(a) all")
plot_gragh(ax1, xaxis, cg5,"(b) cg")
#plot_gragh(ax1, xaxis, cg, "(b) cg")
plot_gragh(ax2, xaxis, ft5,"(c) ft")
plot_gragh(ax3, xaxis, IS5,"(d) IS")
plot_gragh(ax4, xaxis, mg5,"(e) mg")
plot_gragh(ax5, xaxis, sp5,"(f) sp")

plt.show()

#import matplotlib.pyplot as plt
#import numpy as np
#from matplotlib.ticker import MultipleLocator, FormatStrFormatter
#
#majorLocator   = MultipleLocator(20)
#majorFormatter = FormatStrFormatter('%d')
#minorLocator   = MultipleLocator(5)
#
#
#t = np.arange(0.0, 100.0, 0.1)
#s = np.sin(0.1*np.pi*t)*np.exp(-t*0.01)
#
#fig, ax = plt.subplots()
#plt.plot(t,s)
#
#ax.xaxis.set_major_locator(majorLocator)
#ax.xaxis.set_major_formatter(majorFormatter)
#
##for the minor ticks, use no labels; default NullFormatter
#ax.xaxis.set_minor_locator(minorLocator)
#
#plt.show()
